<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>http://www.w3.org/TR/2003/WD-xquery-20030502/#nt-bnf</string>
	<key>fileTypes</key>
	<array>
		<string>xqy</string>
		<string>xquery</string>
	</array>
	<key>foldingStartMarker</key>
	<string>{\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*}</string>
	<key>keyEquivalent</key>
	<string>^~X</string>
	<key>name</key>
	<string>XQuery</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.xquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.xquery</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.xquery</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.xquery</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((?:declare|define)\s+function)\s+((?:[\w_-]+:)?[\w_-]+)\s*([(])(.*)([)])</string>
			<key>name</key>
			<string>meta.function.xquery</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.xml</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>\(:</string>
			<key>end</key>
			<string>:\)</string>
			<key>name</key>
			<string>comment.block.xquery</string>
		</dict>
		<key>entity</key>
		<dict>
			<key>match</key>
			<string>(?x:
			  &amp;               # Literal ampersand
			  (?: amp         # Predefined entity names
			    | lt          
			    | gt          
			    | quot        
			    | apos        
			    | \# \d+      # Decimal character reference
			    | \# x \h+   	# Hex character reference
			    )
			    ;             # Trailing semicolon.
			)</string>
			<key>name</key>
			<string>constant.character.escape.xquery</string>
		</dict>
		<key>entity_bad</key>
		<dict>
			<key>comment</key>
			<string>This will match valid entities too, so always match them first!</string>
			<key>match</key>
			<string>&amp;[^;]*;</string>
			<key>name</key>
			<string>invalid.illegal.disallowed-entity</string>
		</dict>
		<key>literal</key>
		<dict>
			<key>comment</key>
			<string>[91] Literal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>comment</key>
			<string>[92] NumericLiteral</string>
			<key>match</key>
			<string>(?x:         # turn on extended mode 
                -?          # an optional minus 
                (?: 
                  0         # a zero 
                  |         # ...or... 
                  [1-9]     # a 1-9 character 
                  \d*       # followed by zero or more digits 
                  ) 
                (?: 
                  \.        # a period 
                  \d+       # followed by one or more digits 
                  (?: 
                    [eE]    # an e character 
                    [+-]?   # followed by an option +/- 
                    \d+     # followed by one or more digits 
                    )?      # make exponent optional 
                  )?        # make decimal portion optional 
                )</string>
			<key>name</key>
			<string>constant.numeric.xquery</string>
		</dict>
		<key>string_double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xquery</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This is identical to a single quoted string.</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#entity_bad</string>
				</dict>
			</array>
		</dict>
		<key>string_single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xquery</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This is identical to a double quoted string.</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#entity_bad</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>comment</key>
			<string>Basically, a QName.</string>
			<key>match</key>
			<string>(?x:
		            \$        # Literal dollar
		            (?:
		              [\w-]+  # word char or hyphens
		              :       # literal colon
		              )?
		            [\w-]+    # word char or hyphens
          		  )</string>
			<key>name</key>
			<string>variable.other.readwrite.global.xquery</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.xquery</string>
	<key>uuid</key>
	<string>277CCF86-D332-41E6-9871-B940898B338F</string>
</dict>
</plist>
